#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API HH.ru Auto Apply
"""

import requests
import json
import time
from typing import Dict, Any


class HHAPIDemo:
    def __init__(self, base_url: str = "http://localhost:8000"):
        self.base_url = base_url
        self.session = requests.Session()
    
    def get_status(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
        response = self.session.get(f"{self.base_url}/api/status")
        return response.json()
    
    def save_credentials(self, access_token: str, resume_id: str = None) -> Dict[str, Any]:
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        data = {
            "access_token": access_token,
            "resume_id": resume_id
        }
        response = self.session.post(f"{self.base_url}/api/credentials", json=data)
        return response.json()
    
    def create_job_search(self, name: str, filter_url: str, cover_letter: str) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã"""
        data = {
            "name": name,
            "filter_url": filter_url,
            "cover_letter": cover_letter
        }
        response = self.session.post(f"{self.base_url}/api/job-searches", json=data)
        return response.json()
    
    def get_job_searches(self) -> list:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∏—Å–∫–æ–≤ —Ä–∞–±–æ—Ç—ã"""
        response = self.session.get(f"{self.base_url}/api/job-searches")
        return response.json()
    
    def get_applications(self) -> list:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤"""
        response = self.session.get(f"{self.base_url}/api/applications")
        return response.json()
    
    def test_connection(self) -> Dict[str, Any]:
        """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API HH.ru"""
        response = self.session.post(f"{self.base_url}/api/test-connection")
        return response.json()
    
    def start_auto_apply(self) -> Dict[str, Any]:
        """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞"""
        response = self.session.post(f"{self.base_url}/api/start-auto-apply")
        return response.json()
    
    def stop_auto_apply(self) -> Dict[str, Any]:
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞"""
        response = self.session.post(f"{self.base_url}/api/stop-auto-apply")
        return response.json()
    
    def run_single_check(self) -> Dict[str, Any]:
        """–û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π"""
        response = self.session.post(f"{self.base_url}/api/run-single-check")
        return response.json()


def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å API"""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å API HH.ru Auto Apply\n")
    
    api = HHAPIDemo()
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    print("1. üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã:")
    status = api.get_status()
    print(f"   –°—Ç–∞—Ç—É—Å: {'–†–∞–±–æ—Ç–∞–µ—Ç' if status['is_running'] else '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {status['check_interval_minutes']} –º–∏–Ω—É—Ç\n")
    
    # 2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("2. üîë –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    try:
        result = api.save_credentials(
            access_token="demo_token_12345",
            resume_id="demo_resume_67890"
        )
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result['message']}\n")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}\n")
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã
    print("3. üîç –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã:")
    try:
        job_search = api.create_job_search(
            name="–î–µ–º–æ –ø–æ–∏—Å–∫ Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞",
            filter_url="https://hh.ru/search/vacancy?text=python&area=1&experience=between1And3",
            cover_letter="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ –≤–∞—à–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ò–º–µ—é –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å FastAPI, SQLAlchemy –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞."
        )
        print(f"   –°–æ–∑–¥–∞–Ω –ø–æ–∏—Å–∫ —Å ID: {job_search['id']}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {job_search['name']}\n")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}\n")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∏—Å–∫–æ–≤
    print("4. üìã –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤:")
    try:
        searches = api.get_job_searches()
        for search in searches:
            print(f"   - {search['name']} (ID: {search['id']})")
        print()
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}\n")
    
    # 5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤
    print("5. üìù –°–ø–∏—Å–æ–∫ –æ—Ç–∫–ª–∏–∫–æ–≤:")
    try:
        applications = api.get_applications()
        if applications:
            for app in applications[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3
                print(f"   - {app['vacancy_title']} –≤ {app['company_name']} ({app['status']})")
        else:
            print("   –û—Ç–∫–ª–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
        print()
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}\n")
    
    # 6. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞)
    print("6. üîå –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API HH.ru:")
    try:
        result = api.test_connection()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('detail', '–û—à–∏–±–∫–∞')}")
        print("   (–û–∂–∏–¥–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω)\n")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}\n")
    
    # 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–∫–ª–∏–∫–æ–º
    print("7. ‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–∫–ª–∏–∫–æ–º:")
    
    # –ó–∞–ø—É—Å–∫
    try:
        result = api.start_auto_apply()
        print(f"   –ó–∞–ø—É—Å–∫: {result['message']}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    
    time.sleep(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    status = api.get_status()
    print(f"   –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞: {'–†–∞–±–æ—Ç–∞–µ—Ç' if status['is_running'] else '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
    try:
        result = api.stop_auto_apply()
        print(f"   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: {result['message']}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
    
    print()
    
    # 8. –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("8. üîç –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π:")
    try:
        result = api.run_single_check()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result['message']}")
        print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–∏—Å–∫–æ–≤: {result['job_searches_processed']}")
        print(f"   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–∫–ª–∏–∫–æ–≤: {result['applications_sent']}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "="*60)
    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìù –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("1. –ü–æ–ª—É—á–∏—Ç–µ Access Token –Ω–∞ https://dev.hh.ru/admin")
    print("2. –ù–∞–π–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ–∏—Å–∫–∞ –Ω–∞ HH.ru")
    print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ")
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–ª–∏–∫")
    print("\nüåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")


if __name__ == "__main__":
    main() 